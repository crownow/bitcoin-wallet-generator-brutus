import os
import base58
import binascii

# –ü–∞–ø–∫–∞ —Å —Ñ–∞–π–ª–∞–º–∏
input_folder = "/Users/avraam/Downloads/password/"
output_file = "uncompressed_wif_keys.txt"

# –ó–∞–≥—Ä—É–∂–∞–µ–º —É–∂–µ –Ω–∞–π–¥–µ–Ω–Ω—ã–µ –∫–ª—é—á–∏ (—á—Ç–æ–±—ã –∏–∑–±–µ–∂–∞—Ç—å –¥—É–±–ª–∏–∫–∞—Ç–æ–≤)
existing_keys = set()
if os.path.exists(output_file):
    with open(output_file, "r") as out_file:
        existing_keys.update(out_file.read().splitlines())

# –ü—Ä–æ–≤–µ—Ä–∫–∞, —è–≤–ª—è–µ—Ç—Å—è –ª–∏ —Å—Ç—Ä–æ–∫–∞ –≤–∞–ª–∏–¥–Ω—ã–º –Ω–µ—Å–∂–∞—Ç—ã–º WIF-–∫–ª—é—á–æ–º
def is_valid_wif(wif_key):
    try:
        decoded = base58.b58decode_check(wif_key)
        if len(decoded) == 34 and decoded[0] == 0x80 and decoded[-1] == 0x01:
            return False  # –≠—Ç–æ —Å–∂–∞—Ç—ã–π WIF
        return len(decoded) == 33 and decoded[0] == 0x80  # –ù–µ—Å–∂–∞—Ç—ã–π WIF
    except (ValueError, binascii.Error):
        return False  # –û—à–∏–±–∫–∞ –¥–µ–∫–æ–¥–∏—Ä–æ–≤–∞–Ω–∏—è

# –ü—Ä–æ—Ö–æ–¥–∏–º –ø–æ –∫–∞–∂–¥–æ–º—É —Ñ–∞–π–ª—É –≤ –ø–∞–ø–∫–µ
for filename in os.listdir(input_folder):
    file_path = os.path.join(input_folder, filename)

    # –ü—Ä–æ–ø—É—Å–∫–∞–µ–º, –µ—Å–ª–∏ —ç—Ç–æ –Ω–µ —Ñ–∞–π–ª
    if not os.path.isfile(file_path):
        continue

    print(f"üìÇ –û–±—Ä–∞–±–∞—Ç—ã–≤–∞—é —Ñ–∞–π–ª: {filename}")

    # –ß–∏—Ç–∞–µ–º —Ñ–∞–π–ª –ø–æ—Å—Ç—Ä–æ—á–Ω–æ
    with open(file_path, "r", encoding="utf-8", errors="ignore") as infile, open(output_file, "a") as outfile:
        for line in infile:
            clean_line = line.strip()

            # –ü—Ä–æ–≤–µ—Ä—è–µ–º, —è–≤–ª—è–µ—Ç—Å—è –ª–∏ —Å—Ç—Ä–æ–∫–∞ –≤–∞–ª–∏–¥–Ω—ã–º WIF-–∫–ª—é—á–æ–º
            if clean_line.startswith("5") and len(clean_line) in (51, 52) and clean_line not in existing_keys:
                if is_valid_wif(clean_line):
                    outfile.write(clean_line + "\n")
                    existing_keys.add(clean_line)  # –î–æ–±–∞–≤–ª—è–µ–º –≤ —Å–ø–∏—Å–æ–∫ —É–∂–µ –∑–∞–ø–∏—Å–∞–Ω–Ω—ã—Ö

print(f"‚úÖ –ì–æ—Ç–æ–≤–æ! –í—Å–µ –Ω–∞–π–¥–µ–Ω–Ω—ã–µ **–Ω–µ—Å–∂–∞—Ç—ã–µ** WIF-–∫–ª—é—á–∏ —Å–æ—Ö—Ä–∞–Ω–µ–Ω—ã –≤ {output_file}")
