const processBtn = document.getElementById("processBtn");
const stopBtn = document.getElementById("stopBtn");
const continueBtn = document.getElementById("continueBtn");

let isProcessing = false;
let lastProcessedIndex = 0;
let phrases = [];
const CHUNK_SIZE = 1024 * 1024; // 1MB —á–∞–Ω–∫–∏

processBtn.addEventListener("click", async () => {
  const fileInput = document.getElementById("fileInput").files[0];

  if (!fileInput) {
    alert("Please upload a file containing keyword phrases.");
    return;
  }

  document.getElementById("loader").style.display = "block";
  processBtn.disabled = true;
  stopBtn.disabled = false;
  continueBtn.disabled = true;

  isProcessing = true;
  lastProcessedIndex = 0;
  phrases = [];

  function processChunk(chunk) {
    const lines = chunk
      .split("\n")
      .map((line) => line.trim())
      .filter(Boolean);

    phrases.push(...lines);

    if (phrases.length >= 1000) {
      window.electron.send("process-keywords", phrases);
      phrases = [];
    }
  }

  function readNextChunk(offset) {
    if (!isProcessing) return; // –ü—Ä–µ–∫—Ä–∞—â–∞–µ–º –æ–±—Ä–∞–±–æ—Ç–∫—É, –µ—Å–ª–∏ –Ω–∞–∂–∞—Ç–∞ "–°—Ç–æ–ø"

    const reader = new FileReader();

    reader.onload = function (event) {
      processChunk(event.target.result);

      offset += CHUNK_SIZE;
      lastProcessedIndex = offset; // –ó–∞–ø–æ–º–∏–Ω–∞–µ–º –º–µ—Å—Ç–æ –æ—Å—Ç–∞–Ω–æ–≤–∫–∏

      if (offset < fileInput.size) {
        readNextChunk(offset);
      } else {
        if (phrases.length > 0) {
          window.electron.send("process-keywords", phrases);
        }
        stopBtn.disabled = true;
      }
    };

    reader.onerror = function (error) {
      console.error("‚ùå –û—à–∏–±–∫–∞ —á—Ç–µ–Ω–∏—è —Ñ–∞–π–ª–∞:", error);
      document.getElementById("loader").style.display = "none";
    };

    const slice = fileInput.slice(offset, offset + CHUNK_SIZE);
    reader.readAsText(slice);
  }

  readNextChunk(0);
});

// üì© –ü–æ–ª—É—á–∞–µ–º –æ–±—Ä–∞–±–æ—Ç–∞–Ω–Ω—ã–µ –¥–∞–Ω–Ω—ã–µ
window.electron.receive("wallet-data", (wallets) => {
  document.getElementById("loader").style.display = "none";
  processBtn.disabled = false;
  stopBtn.disabled = true;
  continueBtn.disabled = false;

  const tableBody = document.querySelector("#resultsTable tbody");
  tableBody.innerHTML = "";

  console.log("üì© –ü–æ–ª—É—á–µ–Ω—ã –¥–∞–Ω–Ω—ã–µ –∫–æ—à–µ–ª—å–∫–æ–≤:", wallets);

  const filteredWallets = wallets.filter((wallet) =>
    Object.values(wallet.balance).some(
      (entry) => entry.balance > 0 || entry.transactions > 0
    )
  );

  console.log("‚úÖ –û—Ç—Ñ–∏–ª—å—Ç—Ä–æ–≤–∞–Ω–Ω—ã–µ –∫–æ—à–µ–ª—å–∫–∏:", filteredWallets);

  if (filteredWallets.length === 0) {
    const row = document.createElement("tr");
    row.innerHTML = `<td colspan="7" style="text-align: center;">–ù–µ—Ç –∫–æ—à–µ–ª—å–∫–æ–≤ —Å –±–∞–ª–∞–Ω—Å–æ–º –∏–ª–∏ —Ç—Ä–∞–Ω–∑–∞–∫—Ü–∏—è–º–∏</td>`;
    tableBody.appendChild(row);
    return;
  }

  filteredWallets.forEach((wallet) => {
    const row = document.createElement("tr");

    row.innerHTML = `
      <td>${wallet.privateKeyHex || "–û—à–∏–±–∫–∞"}</td>
      <td>${wallet.addresses.p2pkh || "–û—à–∏–±–∫–∞"}</td>
      <td>${wallet.addresses.p2sh || "–û—à–∏–±–∫–∞"}</td>
      <td>${wallet.addresses.p2wpkh || "–û—à–∏–±–∫–∞"}</td>
      <td>${wallet.addresses.p2tr || "–û—à–∏–±–∫–∞"}</td>
      <td>${wallet.balance.p2pkh?.balance || 0}</td>
      <td>${wallet.balance.p2pkh?.transactions || 0}</td>
    `;

    tableBody.appendChild(row);
  });
});

// üî¥ –ö–Ω–æ–ø–∫–∞ "–°—Ç–æ–ø" - –û—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ—Ç –ø—Ä–æ—Ü–µ—Å—Å
stopBtn.addEventListener("click", () => {
  isProcessing = false;
  stopBtn.disabled = true;
  continueBtn.disabled = false;
  window.electron.send("stop-processing");
  console.log("‚èπ –û—Å—Ç–∞–Ω–æ–≤–∫–∞ –æ–±—Ä–∞–±–æ—Ç–∫–∏");
});

// ‚ñ∂Ô∏è –ö–Ω–æ–ø–∫–∞ "–ü—Ä–æ–¥–æ–ª–∂–∏—Ç—å" - –í–æ–∑–æ–±–Ω–æ–≤–ª—è–µ—Ç –ø—Ä–æ—Ü–µ—Å—Å —Å –º–µ—Å—Ç–∞ –æ—Å—Ç–∞–Ω–æ–≤–∫–∏
continueBtn.addEventListener("click", () => {
  if (!isProcessing) {
    console.log("‚ñ∂Ô∏è –ü—Ä–æ–¥–æ–ª–∂–∞–µ–º –æ–±—Ä–∞–±–æ—Ç–∫—É —Å –∏–Ω–¥–µ–∫—Å–∞", lastProcessedIndex);
    document.getElementById("loader").style.display = "block";
    processBtn.disabled = true;
    stopBtn.disabled = false;
    continueBtn.disabled = true;

    isProcessing = true;
    readNextChunk(lastProcessedIndex);
  }
});
