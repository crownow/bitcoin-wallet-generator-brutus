const sqlite3 = require("sqlite3").verbose();
const fs = require("fs");
const { exec } = require("child_process");

const dbFile = "wallets.db";
const sqlFile = "/root/wallets.sql"; // –ü—É—Ç—å –∫ SQL-—Ñ–∞–π–ª—É

// –ü—Ä–æ–≤–µ—Ä—è–µ–º, —Å—É—â–µ—Å—Ç–≤—É–µ—Ç –ª–∏ —Ñ–∞–π–ª
if (!fs.existsSync(sqlFile)) {
  console.error(`‚ùå –§–∞–π–ª ${sqlFile} –Ω–µ –Ω–∞–π–¥–µ–Ω!`);
  process.exit(1);
}

// –û—Ç–∫—Ä—ã–≤–∞–µ–º SQLite –±–∞–∑—É
const db = new sqlite3.Database(dbFile, (err) => {
  if (err) {
    console.error("‚ùå –û—à–∏–±–∫–∞ –ø–æ–¥–∫–ª—é—á–µ–Ω–∏—è –∫ –±–∞–∑–µ:", err);
    process.exit(1);
  }
  console.log("‚úÖ –ü–æ–¥–∫–ª—é—á–µ–Ω–∏–µ –∫ –±–∞–∑–µ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–æ.");

  // –ó–∞–ø—É—Å–∫–∞–µ–º –∏–º–ø–æ—Ä—Ç SQL-—Ñ–∞–π–ª–∞ –≤ –±–∞–∑—É
  console.log("‚è≥ –ù–∞—á–∏–Ω–∞–µ–º –∏–º–ø–æ—Ä—Ç SQL-—Ñ–∞–π–ª–∞ –≤ –±–∞–∑—É...");

  exec(`sqlite3 ${dbFile} < ${sqlFile}`, (error, stdout, stderr) => {
    if (error) {
      console.error(`‚ùå –û—à–∏–±–∫–∞ –≤—ã–ø–æ–ª–Ω–µ–Ω–∏—è SQL-—Ñ–∞–π–ª–∞: ${error.message}`);
      return;
    }
    if (stderr) {
      console.error(`‚ö†Ô∏è –û—à–∏–±–∫–∞ SQL: ${stderr}`);
    }
    console.log("üéâ –ò–º–ø–æ—Ä—Ç –∑–∞–≤–µ—Ä—à—ë–Ω!");
    db.close();
  });

  // –í—ã–≤–æ–¥–∏–º –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ –∑–∞–ø–∏—Å–µ–π –∫–∞–∂–¥—ã–µ 10 —Å–µ–∫—É–Ω–¥
  setInterval(() => {
    db.get("SELECT COUNT(*) as count FROM wallets", (err, row) => {
      if (err) {
        console.error("‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –∑–∞–ø—Ä–æ—Å–µ –∫–æ–ª–∏—á–µ—Å—Ç–≤–∞ –∑–∞–ø–∏—Å–µ–π:", err);
      } else {
        console.log(
          `üìä –¢–µ–∫—É—â–µ–µ –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ –∑–∞–ø–∏—Å–µ–π: ${row.count.toLocaleString()}`
        );
      }
    });
  }, 10000); // –ó–∞–ø—Ä–∞—à–∏–≤–∞–µ–º –∫–∞–∂–¥—ã–µ 10 —Å–µ–∫—É–Ω–¥
});
