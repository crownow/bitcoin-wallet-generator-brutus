const sqlite3 = require("sqlite3").verbose();
const fs = require("fs");
const { exec } = require("child_process");

const dbFile = "wallets.db";
const sqlFile = "/root/wallets.sql"; // –ü—É—Ç—å –∫ SQL-—Ñ–∞–π–ª—É

// –ü—Ä–æ–≤–µ—Ä—è–µ–º, —Å—É—â–µ—Å—Ç–≤—É–µ—Ç –ª–∏ —Ñ–∞–π–ª
if (!fs.existsSync(sqlFile)) {
  console.error(`‚ùå –§–∞–π–ª ${sqlFile} –Ω–µ –Ω–∞–π–¥–µ–Ω!`);
  process.exit(1);
}

// –û—Ç–∫—Ä—ã–≤–∞–µ–º SQLite –±–∞–∑—É
const db = new sqlite3.Database(dbFile, (err) => {
  if (err) {
    console.error("‚ùå –û—à–∏–±–∫–∞ –ø–æ–¥–∫–ª—é—á–µ–Ω–∏—è –∫ –±–∞–∑–µ:", err);
    process.exit(1);
  }
  console.log("‚úÖ –ü–æ–¥–∫–ª—é—á–µ–Ω–∏–µ –∫ –±–∞–∑–µ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–æ.");
});

// –°–æ–∑–¥–∞—ë–º —Ç–∞–±–ª–∏—Ü—É, –µ—Å–ª–∏ –µ—ë –Ω–µ—Ç
db.run("CREATE TABLE IF NOT EXISTS wallets (address TEXT UNIQUE)", (err) => {
  if (err) {
    console.error("‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ —Å–æ–∑–¥–∞–Ω–∏–∏ —Ç–∞–±–ª–∏—Ü—ã:", err);
    process.exit(1);
  }

  console.log("‚è≥ –ù–∞—á–∏–Ω–∞–µ–º –∏–º–ø–æ—Ä—Ç SQL-—Ñ–∞–π–ª–∞ –≤ –±–∞–∑—É...");

  // –í—ã–ø–æ–ª–Ω—è–µ–º –∏–º–ø–æ—Ä—Ç SQL-—Ñ–∞–π–ª–∞ –≤ SQLite
  exec(`sqlite3 ${dbFile} < ${sqlFile}`, (error, stdout, stderr) => {
    if (error) {
      console.error(`‚ùå –û—à–∏–±–∫–∞ –≤—ã–ø–æ–ª–Ω–µ–Ω–∏—è SQL-—Ñ–∞–π–ª–∞: ${error.message}`);
      return;
    }
    if (stderr) {
      console.error(`‚ö†Ô∏è –û—à–∏–±–∫–∞ SQL: ${stderr}`);
    }
    console.log("üéâ –ò–º–ø–æ—Ä—Ç –∑–∞–≤–µ—Ä—à—ë–Ω!");
    db.close();
  });
});
