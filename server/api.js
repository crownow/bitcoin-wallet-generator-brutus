// server/api.js
const axios = require("axios");

const ELECTRUMX_URL = process.env.ELECTRUMX_URL;
// –ü—Ä–æ—Å—Ç–æ–π in-memory cache –¥–ª—è —Ä–µ–∑—É–ª—å—Ç–∞—Ç–æ–≤ –∑–∞–ø—Ä–æ—Å–æ–≤
const balanceCache = new Map();

async function electrumRequest(method, params) {
  try {
    const response = await axios.post(ELECTRUMX_URL, {
      jsonrpc: "2.0",
      id: method,
      method,
      params,
    });
    return response.data.result;
  } catch (error) {
    console.error(`‚ùå Error ElectrumX RPC (${method}):`, error.message);
    return null;
  }
}

async function getWalletBalance(addresses) {
  try {
    console.log("üì° Checking balance for addresses:", addresses);

    if (!addresses || typeof addresses !== "object") {
      throw new Error("Invalid addresses input");
    }

    for (const [type, address] of Object.entries(addresses)) {
      console.log(`üîç Checking balance for ${type}: ${address}`);
    }

    // –ó–¥–µ—Å—å –¥–æ–ª–∂–µ–Ω –±—ã—Ç—å –∫–æ–¥ –æ–±—Ä–∞—â–µ–Ω–∏—è –∫ API –±–∞–ª–∞–Ω—Å–æ–≤
    return {}; // –í—Ä–µ–º–µ–Ω–Ω—ã–π –∑–∞–≥–ª—É—à–∫–∞
  } catch (err) {
    console.error("‚ùå Error in getWalletBalance:", err);
    return null;
  }
}

module.exports = { electrumRequest, getWalletBalance };
